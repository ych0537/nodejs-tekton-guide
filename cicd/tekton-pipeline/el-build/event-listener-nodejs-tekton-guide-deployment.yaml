apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app.kubernetes.io/managed-by: EventListener
    app.kubernetes.io/part-of: Triggers
    eventlistener: event-listener-nodejs-tekton-guide
  name: el-event-listener-nodejs-tekton-guide
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/managed-by: EventListener
      app.kubernetes.io/part-of: Triggers
      eventlistener: event-listener-nodejs-tekton-guide
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/managed-by: EventListener
        app.kubernetes.io/part-of: Triggers
        eventlistener: event-listener-nodejs-tekton-guide
    spec:
      containers:
      - args:
        - --el-name=event-listener-nodejs-tekton-guide
        - --el-namespace=user-joske
        - --port=8080
        - --readtimeout=5
        - --writetimeout=40
        - --idletimeout=120
        - --timeouthandler=30
        - --httpclient-readtimeout=30
        - --httpclient-keep-alive=30
        - --httpclient-tlshandshaketimeout=10
        - --httpclient-responseheadertimeout=10
        - --httpclient-expectcontinuetimeout=1
        - --is-multi-ns=false
        - --payload-validation=true
        - --cloudevent-uri=
        - --tls-cert=
        - --tls-key=
        env:
        - name: K_LOGGING_CONFIG
          value: '{"zap-logger-config":"{\n  \"level\": \"info\",\n  \"development\":
            false,\n  \"sampling\": {\n    \"initial\": 100,\n    \"thereafter\":
            100\n  },\n  \"outputPaths\": [\"stdout\"],\n  \"errorOutputPaths\": [\"stderr\"],\n  \"encoding\":
            \"json\",\n  \"encoderConfig\": {\n    \"timeKey\": \"ts\",\n    \"levelKey\":
            \"level\",\n    \"nameKey\": \"logger\",\n    \"callerKey\": \"caller\",\n    \"messageKey\":
            \"msg\",\n    \"stacktraceKey\": \"stacktrace\",\n    \"lineEnding\":
            \"\",\n    \"levelEncoder\": \"\",\n    \"timeEncoder\": \"iso8601\",\n    \"durationEncoder\":
            \"\",\n    \"callerEncoder\": \"\"\n  }\n}\n"}'
        - name: K_METRICS_CONFIG
          value: '{"Domain":"tekton.dev/triggers","Component":"eventlistener","PrometheusPort":0,"PrometheusHost":"","ConfigMap":{}}'
        - name: K_TRACING_CONFIG
          value: '{"backend":"","debug":"false","sample-rate":"0"}'
        - name: NAMESPACE
          value: user-joske
        - name: NAME
          value: event-listener-nodejs-tekton-guide
        - name: EL_EVENT
          value: enable
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: METRICS_PROMETHEUS_PORT
          value: "9000"
        image: registry.redhat.io/openshift-pipelines/pipelines-triggers-eventlistenersink-rhel8@sha256:388418ee7fa8a8f2ce0d0713b05a7ad2d831ef1e7a51f173db39e650c05b498d
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 1
          httpGet:
            path: /live
            port: 8080
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: event-listener
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 9000
          protocol: TCP
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /live
            port: 8080
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: pipeline
      serviceAccountName: pipeline
      terminationGracePeriodSeconds: 30
