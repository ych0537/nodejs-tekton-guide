apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    tekton.dev/displayName: pull,tag and push
    tekton.dev/pipelines.minVersion: "0.19"
    tekton.dev/tags: workspace
  labels:
    app.kubernetes.io/version: "0.12"
  name: buildah-tag-push-af
spec:
  description: Pull image from image-repository, tag-push image to repository. Git-repo
    must exist on workspace.
  params:
  - description: The source image.
    name: IMAGE_SOURCE
    type: string
  - default: latest
    name: IMAGE_SOURCE_TAG
    type: string
  - default: "true"
    description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS
      registry)
    name: TLSVERIFY
    type: string
  - description: Location of the repo where image has to be pushed
    name: IMAGE
    type: string
  - default: registry.redhat.io/rhel8/buildah@sha256:e19cf23d5f1e0608f5a897f0a50448beb9f8387031cca49c7487ec71bd91c4d3
    description: The location of the buildah builder image.
    name: BUILDER_IMAGE
    type: string
  - default: registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:af7dd5b3b1598a980f17d5f5d3d8a4b11ab4f5184677f7f17ad302baa36bd3c1
    description: Image with git
    name: gitInitImage
    type: string
  results:
  - description: Digest of the image just built.
    name: IMAGE_DIGEST
  - description: Image tag
    name: tag
  steps:
  - image: $(params.gitInitImage)
    name: generate-tag
    script: |
      #!/usr/bin/env sh

      ts=$(date "+%Y%m%d-%H%M%S")
      short=$(git log -n 1 --pretty=format:'%h' | tr -d '\n')
      tag="${ts}_${short}"

      echo -n $tag | tee $(results.tag.path)
    volumeMounts:
    - mountPath: /var/lib/containers
      name: varlibcontainers
    workingDir: $(workspaces.source.path)
  - image: $(params.BUILDER_IMAGE)
    name: image-handling
    script: |
      #!/usr/bin/env sh

      tag=$(cat $(results.tag.path))
      printf "Pull image: %s\n" "buildah pull --storage-driver=vfs $(params.IMAGE_SOURCE):$(params.IMAGE_SOURCE_TAG)"
      buildah pull --storage-driver=vfs $(params.IMAGE_SOURCE):$(params.IMAGE_SOURCE_TAG)
    volumeMounts:
    - mountPath: /var/lib/containers
      name: varlibcontainers
    workingDir: $(workspaces.source.path)
  - image: $(params.BUILDER_IMAGE)
    name: push-tag
    script: |
      #!/usr/bin/env sh

      tag=$(cat $(results.tag.path))
      printf "Push image: %s\n" "buildah push --storage-driver=vfs --tls-verify=$(params.TLSVERIFY) --digestfile=$(workspaces.source.path)/image-digest $(params.IMAGE_SOURCE):$(params.IMAGE_SOURCE_TAG) docker://$(params.IMAGE):$tag"
      buildah push --storage-driver=vfs --tls-verify=$(params.TLSVERIFY) --digestfile=$(workspaces.source.path)/image-digest $(params.IMAGE_SOURCE):$(params.IMAGE_SOURCE_TAG) docker://$(params.IMAGE):$tag
    volumeMounts:
    - mountPath: /var/lib/containers
      name: varlibcontainers
    workingDir: $(workspaces.source.path)
  - image: $(params.BUILDER_IMAGE)
    name: digest-to-results
    script: cat $(workspaces.source.path)/image-digest | tee $(results.IMAGE_DIGEST.path)
  volumes:
  - name: varlibcontainers
  - name: gen-source
  - name: envparams
  workspaces:
  - mountPath: /workspace/source
    name: source
